[tox]
minversion = 3.3.0
isolated_build = True
skip_missing_interpreters = true

[testenv]
description = Test that the tzdata contents are accessible
deps =
    pytest
    pytest-subtests; python_version>='3.6'
    importlib_resources; python_version<'3.7'
commands =
    pytest {toxinidir} {posargs}

[testenv:precommit]
description = Run the pre-commit hooks on all files
deps =
    pre-commit
commands =
    pre-commit install -f --install-hooks
    pre-commit run --all-files

[testenv:update]
description = Update the tzdata contents
skip_install = True
deps =
    requests
    click
    parver
commands =
    python update.py {posargs}

[testenv:bump]
description = Bump the current package version
skip_install = True
deps =
    parver
commands =
    python bump_version.py {posargs}

[testenv:typing]
description = Run typechecking
skip_install = True
deps =
    mypy
    parver
    types-requests
    types-click
commands =
    mypy {posargs} update.py
    mypy {posargs} bump_version.py

[testenv:format]
description = Run auto formatters
skip_install = True
deps =
    black
    isort >= 5.0.0
commands =
    black .
    isort update.py
    isort --atomic -rc tests

[testenv:docs]
description = Build the documentation
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" "{toxinidir}/docs" \
                    "{toxinidir}/docs/_output" {posargs: -j auto --color -bhtml}

[testenv:build]
description = Build a wheel and source distribution
skip_install = True
deps =
    build
    twine
commands =
    python -c "from pathlib import Path; \
               [x.unlink(missing_ok=True) for x in Path('{toxinidir}/dist').glob('*')]"
    python -m build -o {toxinidir}/dist {toxinidir}
    twine check {toxinidir}/dist/*
